import { useState } from "react";

const Navbar: React.FC = () => {
  const [pos, setPos] = useState<number>(1);

  const HostingIcon: React.FC = () => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="25"
        viewBox="0 0 24 25"
        fill="none"
      >
        <path
          d="M14.8235 4.02941C14.8235 4.96547 14.4517 5.86319 13.7898 6.52508C13.1279 7.18698 12.2302 7.55882 11.2941 7.55882C10.3581 7.55882 9.46034 7.18698 8.79845 6.52508C8.13655 5.86319 7.76471 4.96547 7.76471 4.02941C7.76471 3.09335 8.13655 2.19563 8.79845 1.53374C9.46034 0.871848 10.3581 0.5 11.2941 0.5C12.2302 0.5 13.1279 0.871848 13.7898 1.53374C14.4517 2.19563 14.8235 3.09335 14.8235 4.02941ZM21.8824 4.73529C21.8824 5.48414 21.5849 6.20232 21.0554 6.73183C20.5258 7.26135 19.8077 7.55882 19.0588 7.55882C18.31 7.55882 17.5918 7.26135 17.0623 6.73183C16.5328 6.20232 16.2353 5.48414 16.2353 4.73529C16.2353 3.98645 16.5328 3.26827 17.0623 2.73876C17.5918 2.20924 18.31 1.91176 19.0588 1.91176C19.8077 1.91176 20.5258 2.20924 21.0554 2.73876C21.5849 3.26827 21.8824 3.98645 21.8824 4.73529ZM3.52941 7.55882C4.27826 7.55882 4.99643 7.26135 5.52595 6.73183C6.05546 6.20232 6.35294 5.48414 6.35294 4.73529C6.35294 3.98645 6.05546 3.26827 5.52595 2.73876C4.99643 2.20924 4.27826 1.91176 3.52941 1.91176C2.78057 1.91176 2.06239 2.20924 1.53287 2.73876C1.00336 3.26827 0.705882 3.98645 0.705882 4.73529C0.705882 5.48414 1.00336 6.20232 1.53287 6.73183C2.06239 7.26135 2.78057 7.55882 3.52941 7.55882ZM5.64706 10.7353C5.64706 9.76118 6.43765 8.97059 7.41177 8.97059H15.1765C15.5893 8.97039 15.9891 9.11493 16.3064 9.37907C16.6237 9.6432 16.8383 10.0102 16.9129 10.4162C15.5102 10.5491 14.17 11.0613 13.0361 11.8977C11.9021 12.7342 11.0172 13.8634 10.476 15.1644C9.93493 16.4655 9.75803 17.8892 9.96432 19.2831C10.1706 20.677 10.7523 21.9884 11.6471 23.0769C10.8773 23.1251 10.1058 23.0152 9.38015 22.7537C8.65451 22.4923 7.99011 22.085 7.42793 21.557C6.86575 21.0289 6.4177 20.3913 6.11142 19.6834C5.80513 18.9756 5.64709 18.2125 5.64706 17.4412V10.7353ZM18.3374 10.412C19.9454 10.5532 21.4122 11.1856 22.5882 12.1569V10.7353C22.5882 9.76118 21.7976 8.97059 20.8235 8.97059H17.8179C18.1002 9.39129 18.2838 9.88259 18.336 10.412M4.23529 10.7353C4.23529 10.0816 4.43294 9.476 4.77035 8.97059H1.76471C0.790588 8.97059 2.51831e-08 9.76118 2.51831e-08 10.7353V16.0294C-6.58812e-05 16.6338 0.129231 17.2312 0.379202 17.7815C0.629174 18.3318 0.99403 18.8222 1.44925 19.2198C1.90448 19.6174 2.43953 19.9129 3.01845 20.0866C3.59737 20.2603 4.20675 20.308 4.80565 20.2266C4.42857 19.3464 4.23452 18.3987 4.23529 17.4412V10.7353ZM24 18.1471C24 19.832 23.3307 21.4479 22.1393 22.6393C20.9479 23.8307 19.332 24.5 17.6471 24.5C15.9622 24.5 14.3463 23.8307 13.1549 22.6393C11.9634 21.4479 11.2941 19.832 11.2941 18.1471C11.2941 16.4622 11.9634 14.8463 13.1549 13.6549C14.3463 12.4634 15.9622 11.7941 17.6471 11.7941C19.332 11.7941 20.9479 12.4634 22.1393 13.6549C23.3307 14.8463 24 16.4622 24 18.1471ZM18.3529 15.3235C18.3529 15.1363 18.2786 14.9568 18.1462 14.8244C18.0138 14.692 17.8343 14.6176 17.6471 14.6176C17.4598 14.6176 17.2803 14.692 17.1479 14.8244C17.0155 14.9568 16.9412 15.1363 16.9412 15.3235V17.4412H14.8235C14.6363 17.4412 14.4568 17.5155 14.3244 17.6479C14.192 17.7803 14.1176 17.9598 14.1176 18.1471C14.1176 18.3343 14.192 18.5138 14.3244 18.6462C14.4568 18.7786 14.6363 18.8529 14.8235 18.8529H16.9412V20.9706C16.9412 21.1578 17.0155 21.3373 17.1479 21.4697C17.2803 21.6021 17.4598 21.6765 17.6471 21.6765C17.8343 21.6765 18.0138 21.6021 18.1462 21.4697C18.2786 21.3373 18.3529 21.1578 18.3529 20.9706V18.8529H20.4706C20.6578 18.8529 20.8373 18.7786 20.9697 18.6462C21.1021 18.5138 21.1765 18.3343 21.1765 18.1471C21.1765 17.9598 21.1021 17.7803 20.9697 17.6479C20.8373 17.5155 20.6578 17.4412 20.4706 17.4412H18.3529V15.3235Z"
          fill={`${pos !== 1 ? "white" : "black"}`}
          className="transition-colors ease-in-out"
        />
      </svg>
    );
  };

  const HomeIcon: React.FC = () => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="25"
        viewBox="0 0 20 25"
        fill="none"
      >
        <path
          d="M8.7399 19.7L15.5199 12.92L13.7799 11.18L8.7099 16.25L6.1899 13.73L4.4799 15.44L8.7399 19.7ZM2.7999 24.5C2.1399 24.5 1.5751 24.2652 1.1055 23.7956C0.635902 23.326 0.400702 22.7608 0.399902 22.1V2.9C0.399902 2.24 0.635102 1.6752 1.1055 1.2056C1.5759 0.736 2.1407 0.5008 2.7999 0.5H12.3999L19.5999 7.7V22.1C19.5999 22.76 19.3651 23.3252 18.8955 23.7956C18.4259 24.266 17.8607 24.5008 17.1999 24.5H2.7999ZM11.1999 8.9V2.9H2.7999V22.1H17.1999V8.9H11.1999Z"
          fill={`${pos !== 2 ? "white" : "black"}`}
          className="transition-colors ease-in-out"
        />
      </svg>
    );
  };

  const ApplicationIcon: React.FC = () => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="25"
        viewBox="0 0 20 25"
        fill="none"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M9.9999 2.9C9.36338 2.9 8.75293 3.15286 8.30285 3.60294C7.85276 4.05303 7.5999 4.66348 7.5999 5.3H12.3999C12.3999 4.66348 12.147 4.05303 11.697 3.60294C11.2469 3.15286 10.6364 2.9 9.9999 2.9ZM6.8247 1.7C7.6707 0.9536 8.7831 0.5 9.9999 0.5C11.2167 0.5 12.3279 0.9536 13.1751 1.7H17.1999C17.8364 1.7 18.4469 1.95286 18.897 2.40294C19.347 2.85303 19.5999 3.46348 19.5999 4.1V22.1C19.5999 22.7365 19.347 23.347 18.897 23.7971C18.4469 24.2471 17.8364 24.5 17.1999 24.5H2.7999C2.16338 24.5 1.55293 24.2471 1.10285 23.7971C0.652759 23.347 0.399902 22.7365 0.399902 22.1V4.1C0.399902 3.46348 0.652759 2.85303 1.10285 2.40294C1.55293 1.95286 2.16338 1.7 2.7999 1.7H6.8247ZM5.3511 4.1H2.7999V22.1H17.1999V4.1H14.6487C14.7479 4.4848 14.7983 4.8848 14.7999 5.3V6.5C14.7999 6.81826 14.6735 7.12348 14.4484 7.34853C14.2234 7.57357 13.9182 7.7 13.5999 7.7H6.3999C6.08164 7.7 5.77642 7.57357 5.55137 7.34853C5.32633 7.12348 5.1999 6.81826 5.1999 6.5V5.3C5.2015 4.8848 5.2519 4.4848 5.3511 4.1ZM5.1999 11.3C5.1999 10.9817 5.32633 10.6765 5.55137 10.4515C5.77642 10.2264 6.08164 10.1 6.3999 10.1H13.5999C13.9182 10.1 14.2234 10.2264 14.4484 10.4515C14.6735 10.6765 14.7999 10.9817 14.7999 11.3C14.7999 11.6183 14.6735 11.9235 14.4484 12.1485C14.2234 12.3736 13.9182 12.5 13.5999 12.5H6.3999C6.08164 12.5 5.77642 12.3736 5.55137 12.1485C5.32633 11.9235 5.1999 11.6183 5.1999 11.3ZM5.1999 16.1C5.1999 15.7817 5.32633 15.4765 5.55137 15.2515C5.77642 15.0264 6.08164 14.9 6.3999 14.9H9.9999C10.3182 14.9 10.6234 15.0264 10.8484 15.2515C11.0735 15.4765 11.1999 15.7817 11.1999 16.1C11.1999 16.4183 11.0735 16.7235 10.8484 16.9485C10.6234 17.1736 10.3182 17.3 9.9999 17.3H6.3999C6.08164 17.3 5.77642 17.1736 5.55137 16.9485C5.32633 16.7235 5.1999 16.4183 5.1999 16.1Z"
          fill={`${pos !== 3 ? "white" : "black"}`}
          className="transition-colors ease-in-out"
        />
      </svg>
    );
  };

  return (
    <div className="bg-transparent w-full h-[95px] bottom-0 fixed px-2 py-5 flex flex-row justify-center items-center">
      <div className="bg-black w-full h-full rounded-full grid grid-cols-3 grid-rows-1">
        <div
          className="rounded-full col-start-1 row-start-1 flex justify-center items-center"
          onClick={() => {
            setPos(1);
          }}
        >
          <div
            className={`z-10 w-full h-full flex flex-col items-center justify-center ${pos !== 1 ? "text-white" : "text-black"} transition-colors ease-in-out`}
          >
            <HostingIcon />
            <div className="text-body-small font-bold">Hosting</div>
          </div>
        </div>
        <div
          className="rounded-full col-start-2 row-start-1 flex justify-center items-center"
          onClick={() => {
            setPos(2);
          }}
        >
          <div
            className={`z-10 w-full h-full flex flex-col items-center justify-center ${pos !== 2 ? "text-white" : "text-black"} transition-colors ease-in-out`}
          >
            <HomeIcon />
            <div className="text-body-small font-bold">Home</div>
          </div>
        </div>
        <div
          className="rounded-full col-start-3 row-start-1 flex justify-center items-center"
          onClick={() => {
            setPos(3);
          }}
        >
          <div
            className={`z-10 w-full h-full flex flex-col items-center justify-center ${pos !== 3 ? "text-white" : "text-black"} transition-colors ease-in-out`}
          >
            <ApplicationIcon />
            <div className="text-body-small font-bold">Application</div>
          </div>
        </div>
      </div>
      <div
        className={`rounded-full bg-transparent px-2 py-5 w-full h-full absolute flex flex-row items-center justify-center`}
      >
        <div
          className={`bg-transparent p-2 w-1/3 h-full rounded-full ${pos === 1 ? "-translate-x-full" : pos === 3 ? "translate-x-full" : ""}
            transition-transform ease-in-out`}
        >
          <div className="bg-white w-full h-full rounded-full"></div>
        </div>
      </div>
    </div>
  );
};

export default Navbar;
